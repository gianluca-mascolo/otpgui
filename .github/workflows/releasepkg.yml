name: Build Artifact

on:
  push:
    tags: [ '[0-9]+.[0-9]+.[0-9]+' ]

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Python Poetry Action
        uses: abatilo/actions-poetry@v2.1.3
      - name: Build Python Artifact
        run: GIT_TAG=${GITHUB_REF##refs/tags/} make python
      - name: Install dependencies
        run: poetry build -f wheel
      - name: Setup Docker
        run: |
          touch /tmp/.X11-unix
          touch ~/.Xauthority
          echo "USER_UID=$(id -u)" > .env
          docker-compose build archpy
          docker-compose build ubuntupy
      - name: Build Arch Artifact
        run: |
          GIT_TAG=${GITHUB_REF##refs/tags/} make arch
      - name: Build Deb Artifact
        run: |
          GIT_TAG=${GITHUB_REF##refs/tags/} make deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Release Package to Github
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            build/python/artifacts/otpgui-*-py3-none-any.whl
            build/arch/artifacts/otpgui-*-any.pkg.tar.zst
            build/deb/artifacts/python3-otpgui_*_all.deb
          generate_release_notes: true
      - name: Prepare AUR upload
        run: |
          [ -d ~/.ssh ] || mkdir -p [ ~/.ssh ]
          chmod 0700 ~/.ssh
          echo "${{ secrets.AUR_SSH_KEY }}" | base64 -d > ~/.ssh/aur
          chmod 0600 ~/.ssh/aur
          ssh-keyscan -H aur.archlinux.org > ~/.ssh/known_hosts
          chmod 0600 ~/.ssh/known_hosts
          ssh-agent > ~/.ssh/agent
          source ~/.ssh/agent
          ssh-add ~/.ssh/aur
          echo -e 'Host aur.archlinux.org\n  User aur\n  IdentityFile ~/.ssh/aur\n  ConnectTimeout 10' > ~/.ssh/config
          ssh aur.archlinux.org list-repos
      - name: Publish Package to AUR
        run: |
          source ~/.ssh/agent
          AUR_GIT_DIR=$(mktemp -d)
          git clone aur@aur.archlinux.org:otpgui.git $AUR_GIT_DIR
          cp -f build/arch/artifacts/PKGBUILD $AUR_GIT_DIR
          cp -f build/arch/artifacts/.SRCINFO $AUR_GIT_DIR
          cd $AUR_GIT_DIR
          git config user.email ${{ secrets.AUR_USER_MAIL }}
          git config user.name ${{ secrets.AUR_USER_NAME }}
          git add PKGBUILD .SRCINFO
          git commit -m "Released version ${GITHUB_REF##refs/tags/}"
          git push origin master
